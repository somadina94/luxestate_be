name: Deploy to EC2

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest app/tests/ -v --tb=short
        env:
          TESTING: "true"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Navigate to project directory
            cd /home/${{ secrets.EC2_USERNAME }}/luxestate || mkdir -p /home/${{ secrets.EC2_USERNAME }}/luxestate && cd /home/${{ secrets.EC2_USERNAME }}/luxestate

            # Pull latest code from GitHub
            if [ -d .git ]; then
              git fetch origin
              git reset --hard origin/main || git reset --hard origin/master
              git clean -fd
            else
              git clone https://github.com/${{ github.repository }}.git .
            fi

            # Ensure .env file exists
            if [ ! -f .env ]; then
              echo "Warning: .env file not found. Please create it manually."
            fi

            # Stop and remove old container
            docker stop luxestate_api 2>/dev/null || true
            docker rm luxestate_api 2>/dev/null || true

            # Build Docker image
            echo "Building Docker image..."
            docker build -t luxestate-api:latest .

            # Create network if it doesn't exist
            docker network create luxestate_network 2>/dev/null || true

            # Run database migrations (if .env exists)
            if [ -f .env ]; then
              echo "Running database migrations..."
              docker run --rm \
                --network luxestate_network \
                --env-file .env \
                luxestate-api:latest \
                sh -c "alembic upgrade head" || echo "Migration failed, continuing anyway..."
            fi

            # Start new container
            echo "Starting application container..."
            docker run -d \
              --name luxestate_api \
              --network luxestate_network \
              -p 3001:3001 \
              --restart unless-stopped \
              --env-file .env \
              luxestate-api:latest

            # Wait a moment for container to start
            sleep 5

            # Check if container is running
            if docker ps | grep -q luxestate_api; then
              echo "✅ Container is running!"
              
              # Test health endpoint
              sleep 3
              if curl -f http://localhost:3001/healthy > /dev/null 2>&1; then
                echo "✅ Health check passed!"
              else
                echo "⚠️ Health check failed. Check logs: docker logs luxestate_api"
              fi
            else
              echo "❌ Container failed to start. Check logs: docker logs luxestate_api"
              exit 1
            fi

            # Clean up old images (keep last 3)
            echo "Cleaning up old Docker images..."
            docker image prune -af --filter "until=168h" || true
